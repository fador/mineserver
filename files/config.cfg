#
# Mineserver configuration
#

# Search paths
# Note: leading tilde '~' is treated as $HOME
system.path.data    = "files";
system.path.plugins = "plugins";
system.path.home    = ".";
system.pid_file     = "mineserver.pid";

# Include item alias config file
include "item_alias.cfg";

# Interface.
system.interface.use_cli = true;

# Server name
system.server_name = "Mineserver testserver";

# Validate usernames against minecraft.net?
system.user_validation = false;

# Allow connecting when auth is down
system.allow_connect_on_auth_timeout = true;

# Disclose Software Version
system.show_version = true; 

# Userlimit
system.user_limit = 50;

# IP
net.ip = "0.0.0.0";

# Port
net.port = 25565;


# Server administrator authentication password
# Used for core commands like shutdown and loadplugin
# NOTE: This is not yet used for anything. Work in progress.
system.admin.password = "password";

# 0 = Normal Map
# 1 = Nether Map
# ...
# Map directory : Generator
map.storage.nbt.directories= ();
# WORLD ARE LOADED ALPHABETICALLY. you have been warned ;P

# Generators: 
# 0 - old generator
# 1 - nether generator
# 2 - heaven generator
# 3 - new (biome) generator
# 4 - mapgen by Eximius

#map.storage.nbt.directories += ("B-nether":1);
#map.storage.nbt.directories += ("Cheaven":2);
map.storage.nbt.directories += ("A-world":3);

# Localization strings
strings.wrong_protocol = "Wrong protocol version";
strings.server_full = "Server is currently full";

# Physics options
system.physics.enabled = false;

# Enable PvP ?
system.pvp.enabled = true;

# Enable area damage?
system.damage.enabled = true;

# true = Only helmets in helmet slot, false = any block in helmet slot (fun!)
system.armour.helmet_strict = true;

furnace.items.stone = ("in":4, "out":1, "meta":0, "count":1);
furnace.items.gold = ("in":14, "out":266, "meta":0, "count":1);
furnace.items.iron = ("in":15, "out":265, "meta":0, "count":1);
furnace.items.charcoal = ("in":17, "out":263, "meta":1, "count":1);
furnace.items.diamond = ("in":56, "out":264, "meta":0, "count":1);
furnace.items.lapiz = ("in":21, "out":351, "meta":4, "count":6);
furnace.items.glass = ("in":12, "out":20, "meta":0, "count":1);
furnace.items.pork = ("in":319, "out":320, "meta":0, "count":1);
furnace.items.clay = ("in":337, "out":336, "meta":0, "count":1);
furnace.items.fish = ("in":349, "out":350, "meta":0, "count":1);
furnace.items.cactus = ("in": 81, "out":351, "meta":2, "count":1);

# Save generated chunks which are not changed?
#  Will generate the chunks again if false.
map.save_unchanged_chunks = true;

# Map save interval in seconds, 0 = off
map.save_interval = 1800;

#
# Map generator parameters
#

# Generate spawn area in advance
map.generate_spawn.enabled = true;
map.generate_spawn.size = 5;
map.generate_spawn.show_progress = false;

# Time that grass takes to spread to the next block, in seconds
# Please note that zero is a VERY bad idea.
mapgen.grassrate = 10;
mapgen.croprate = 10;
mapgen.cactusrate = 10;
mapgen.reedrate = 10;
# Max height
mapgen.cactusmax = 4; 
mapgen.reedmax = 5;


# Generate flatgrass map instead of normal map
mapgen.flatgrass = false;

# Snow instead of grass
mapgen.winter.enabled = false;

# Sea level
mapgen.sea.level = 62;

# Add Ore
mapgen.addore = true;

# Generate trees
mapgen.trees.enabled = true;

# Generate caves
mapgen.caves.enabled = false;

# Smaller number = smaller caves
mapgen.caves.size = 15;

# Do not modify if not sure what this is
# Used in: if(caveNoise.GetValue(x,y,z) < caveTreshold)
mapgen.caves.treshold = 0.05;

mapgen.caves.lava = true;

# Expand beaches (Experimental)
mapgen.beaches.expand = false;
mapgen.beaches.extent = 10;
mapgen.beaches.height = 2;

# Plugin loading
#
# The syntax is as follows:
#   system.plugins += ("<name>");
#   system.plugins += ("<alias>" : "<name>");
# Alternatively you can do this:
#   system.plugins.<alias> = "<name>";
#
# Plugins are to be found under 'system.path.plugins' path
#
# If you use the second syntax, you're limited to [a-zA-Z0-9_]+ for the alias.
# It's probably not a great idea to use any characters other than that anyway.
#
# <alias>
# The plugin alias is whatever you like, it will be passed to the plugin so it
# can use it as a sort of instance name. For example if you have two different
# ban lists (for some reason), you could have them both operating at once by
# giving them unique identifiers.
#
# <name>
# Plugin name. If it starts with underscore '_' character, mineserver tries to
# load it from within the main binary. Instructions on how to compile plugins
# into mineserver are pending, but it basically involves just compiling the
# plugin to an object file then linking it to the mineserver binary when it's
# built.
#
# More information on this topic will be covered on the wiki Soon (tm).

system.plugins = ();
#system.plugins += ("binlog");
#system.plugins += ("banlist");
system.plugins += ("commands");
#system.plugins += ("crapMobs");
#system.plugins += ("cursesui");
system.plugins += ("filelog");
system.plugins += ("flatpermissions");
system.plugins += ("nBreak");
system.plugins += ("nether");
system.plugins += ("passiveMobs");
#system.plugins += ("whitelist");
